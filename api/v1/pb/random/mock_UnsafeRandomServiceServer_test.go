// Code generated by mockery v2.20.0. DO NOT EDIT.

package pb

import mock "github.com/stretchr/testify/mock"

// MockUnsafeRandomServiceServer is an autogenerated mock type for the UnsafeRandomServiceServer type
type MockUnsafeRandomServiceServer struct {
	mock.Mock
}

type MockUnsafeRandomServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnsafeRandomServiceServer) EXPECT() *MockUnsafeRandomServiceServer_Expecter {
	return &MockUnsafeRandomServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedRandomServiceServer provides a mock function with given fields:
func (_m *MockUnsafeRandomServiceServer) mustEmbedUnimplementedRandomServiceServer() {
	_m.Called()
}

// MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedRandomServiceServer'
type MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedRandomServiceServer is a helper method to define mock.On call
func (_e *MockUnsafeRandomServiceServer_Expecter) mustEmbedUnimplementedRandomServiceServer() *MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call {
	return &MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedRandomServiceServer")}
}

func (_c *MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call) Run(run func()) *MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call) Return() *MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call) RunAndReturn(run func()) *MockUnsafeRandomServiceServer_mustEmbedUnimplementedRandomServiceServer_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockUnsafeRandomServiceServer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockUnsafeRandomServiceServer creates a new instance of MockUnsafeRandomServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockUnsafeRandomServiceServer(t mockConstructorTestingTNewMockUnsafeRandomServiceServer) *MockUnsafeRandomServiceServer {
	mock := &MockUnsafeRandomServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
