version: "3.9"

services:
    random_service:
      container_name: random_service
      build:
        context: ../../
        dockerfile: deploy/docker/Dockerfile
      restart: on-failure
      volumes:
          - ../../config/config-docker.yaml:/usr/app/config/config.yaml
      ports:
          - 8069:8069
          - 8071:8071 # metrics
      networks:
          - service

    client:
      container_name: client
      build:
        context: ../../
        dockerfile: deploy/docker/Dockerfile.client
      restart: on-failure
      environment:
        - CLIENT_BIND_ADDR=127.0.0.1:8070
        - SERVER_BIND_ADDR=random_service:8069
      ports:
          - 8070:8070
      networks:
          - service
      depends_on:
          - random_service

    minio:
      image: minio/minio:RELEASE.2023-03-24T21-41-23Z
      entrypoint: [""]
      command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
      environment:
        - MINIO_ROOT_USER=mimir
        - MINIO_ROOT_PASSWORD=supersecret
      volumes:
        - minio-data:/data

    grafana:
      image: grafana/grafana:8.5.22
      pull_policy: always
      environment:
        - GF_AUTH_ANONYMOUS_ENABLED=true
        - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        - GF_USERS_DEFAULT_THEME=light
        - GF_LOG_MODE=console
        - GF_LOG_LEVEL=critical
      volumes:
        - ./config/grafana-provisioning-dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro
        - ./config/grafana-provisioning-datasources.yaml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
        # Explicitly list the dashboards we want to show in the demo. We intentionally exclude dashboards that require
        # Kubernetes metrics (eg. resources or networking) and other services not available in the demo (eg. Grafana Loki).
        - ./config/mimir-mixin-compiled/dashboards/mimir-alertmanager.json:/var/lib/grafana/dashboards/mimir-alertmanager.json:ro
        - ./config/mimir-mixin-compiled/dashboards/mimir-compactor.json:/var/lib/grafana/dashboards/mimir-compactor.json:ro
        - ./config/mimir-mixin-compiled/dashboards/mimir-object-store.json:/var/lib/grafana/dashboards/mimir-object-store.json:ro
        - ./config/mimir-mixin-compiled/dashboards/mimir-overrides.json:/var/lib/grafana/dashboards/mimir-overrides.json:ro
        - ./config/mimir-mixin-compiled/dashboards/mimir-queries.json:/var/lib/grafana/dashboards/mimir-queries.json:ro
        - ./config/mimir-mixin-compiled/dashboards/mimir-reads.json:/var/lib/grafana/dashboards/mimir-reads.json:ro
        - ./config/mimir-mixin-compiled/dashboards/mimir-ruler.json:/var/lib/grafana/dashboards/mimir-ruler.json:ro
        - ./config/mimir-mixin-compiled/dashboards/mimir-tenants.json:/var/lib/grafana/dashboards/mimir-tenants.json:ro
        - ./config/mimir-mixin-compiled/dashboards/mimir-top-tenants.json:/var/lib/grafana/dashboards/mimir-top-tenants.json:ro
        - ./config/mimir-mixin-compiled/dashboards/mimir-writes.json:/var/lib/grafana/dashboards/mimir-writes.json:ro
      ports:
        - 9000:3000

    prometheus:
      image: prom/prometheus:v2.43.0
      command:
        - --config.file=/etc/prometheus/prometheus.yml
        - --log.level=error
        - --storage.tsdb.path=/prometheus
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
      volumes:
        - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
        - ./config/mimir-mixin-compiled/rules.yaml:/etc/prometheus/rules.yaml
      depends_on:
        - "mimir-1"
        - "mimir-2"
        - "mimir-3"

    load-balancer:
      image: nginx:1.23-alpine3.17
      volumes:
        - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on:
        - "mimir-1"
        - "mimir-2"
        - "mimir-3"
      ports:
        - 9009:9009

    mimir-1:
      image: grafana/mimir:2.7.1
      command: ["-config.file=/etc/mimir.yaml"]
      hostname: mimir-1
      depends_on:
        - minio
      volumes:
        - ./config/mimir.yaml:/etc/mimir.yaml
        - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
        - mimir-1-data:/data

    mimir-2:
      image: grafana/mimir:2.7.1
      command: ["-config.file=/etc/mimir.yaml"]
      hostname: mimir-2
      depends_on:
        - minio
      volumes:
        - ./config/mimir.yaml:/etc/mimir.yaml
        - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
        - mimir-2-data:/data

    mimir-3:
      image: grafana/mimir:2.7.1
      command: ["-config.file=/etc/mimir.yaml"]
      hostname: mimir-3
      depends_on:
        - minio
      volumes:
        - ./config/mimir.yaml:/etc/mimir.yaml
        - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
        - mimir-3-data:/data

volumes:
  mimir-1-data:
  mimir-2-data:
  mimir-3-data:
  minio-data:

# Network
networks:
  service:
      name: service
